#!/usr/bin/env bash

set -e

if [[ $# -ne 3 ]]
then
    echo "create-pr: invalid number of arguments"
    exit 1
fi

source_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"

branch=$(git branch --show-current)
function switch_back() {
    cat .commit_message
    rm -f .commit_message
    git stash
    git checkout $branch
}
trap switch_back EXIT

update_branch="maintenance/update/${1}/${3}"

if git branch | grep -q "${update_branch}"
then
    git branch -D "${update_branch}"
fi

config_file="${source_dir}/../toolchains/config.cmake"

current_version=$(cat "${config_file}" \
    | grep REAVEROS_${1^^}_${2} \
    | awk '{ print $2 }' | sed 's/.$//'
)

git checkout -b "${update_branch}"
sed -i "s/REAVEROS_${1^^}_${2} ${current_version}/REAVEROS_${1^^}_${2} ${3}/" "${config_file}"
git add "${config_file}"

echo "Update toolchain ${1} from ${current_version} to ${3}." > .commit_message
git commit --file .commit_message

remote_push=$(git remote get-url --push origin)
if [[ "${remote_push}" != "git@github.com:griwes/reaveros.git" && "${remote_push}" != "https://github.com/griwes/reaveros" ]]
then
    echo "Unrecognized remote repository; not pushing nor creating a PR."
    exit 0
fi

if git ls-remote | grep -q "refs/heads/${update_branch}"
then
    git push origin ":${update_branch}"
fi

git push -u origin "${update_branch}"

curl \
    -X POST \
    -H "Accept: application/vnd.github.v3+json" \
    -H "Authorization: token ${GITHUB_TOKEN}" \
    https://api.github.com/repos/griwes/reaveros/pulls \
    -d "{\"head\": \"${update_branch}\", \"base\": \"${branch}\", \"title\": \"$(cat .commit_message)\"}"

