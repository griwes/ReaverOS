/*
 * Copyright © 2021 Michał 'Griwes' Dominiak
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once

#include "climits"

#define _LIBFREESTANDING_DEFINE_ALIASES(size, type)                                                          \
    using int##size##_t = signed type;                                                                       \
    static_assert(sizeof(int##size##_t) * CHAR_BIT == size, "");                                             \
    using uint##size##_t = unsigned type;                                                                    \
    static_assert(sizeof(uint##size##_t) * CHAR_BIT == size, "");                                            \
    using int_least##size##_t = signed type;                                                                 \
    static_assert(sizeof(int_least##size##_t) * CHAR_BIT >= size, "");                                       \
    using uint_least##size##_t = unsigned type;                                                              \
    static_assert(sizeof(uint_least##size##_t) * CHAR_BIT >= size, "");                                      \
    using int_fast##size##_t = signed type;                                                                  \
    static_assert(sizeof(int_fast##size##_t) * CHAR_BIT >= size, "");                                        \
    using uint_fast##size##_t = unsigned type;                                                               \
    static_assert(sizeof(uint_fast##size##_t) * CHAR_BIT >= size, "");

namespace std
{
_LIBFREESTANDING_DEFINE_ALIASES(8, char);
_LIBFREESTANDING_DEFINE_ALIASES(16, short);
_LIBFREESTANDING_DEFINE_ALIASES(32, int);
_LIBFREESTANDING_DEFINE_ALIASES(64, long);

using intptr_t = long;
using uintptr_t = unsigned long;
static_assert(sizeof(intptr_t) == sizeof(void *), "");
static_assert(sizeof(uintptr_t) == sizeof(void *), "");

using intmax_t = __int128;
using uintmax_t = unsigned __int128;
}

// vim: ft=cpp
